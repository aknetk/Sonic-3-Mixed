object 0x2D;

var Length:int;
var LastY:int;

event FallingLog() : CONSTRUCTER {
    if (Scene.Act == 1) {
        BinIndex = LevelScene.LoadSpriteBin("AIZ/Falling Log (Act 1).bin");
        LevelScene.LoadSpriteBin("AIZ/Falling Log Splash (Act 1).bin");
    }
    else {
        BinIndex = LevelScene.LoadSpriteBin("AIZ/Falling Log (Act 2).bin");
        LevelScene.LoadSpriteBin("AIZ/Falling Log Splash (Act 2).bin");
    }
}

event Create() {
    Active = true;
    Priority = false;

    W = 48;
    H = 14;

    SolidTop = true;
    Scene.AddSelfToRegistry(this, "Solid");

    Length = 0;
    LastY = Y;

    CurrentAnimation = Sprite.FindAnimation("Falling Log (Act 1)");
    if (Scene.Act == 2)
        CurrentAnimation = Sprite.FindAnimation("Falling Log (Act 2)");
}

event Update() {
    Priority = true;

    LastY = Y;

    Length = Scene.WaterLevel - InitialY;
    Y = InitialY + Math.min(Frame, Length);

    Length = (Length / 0x80) * 0x80 + 0x80;

    Frame = (Frame + 1) % (Length);

    if (Math.abs(Scene.Player.EZX - X) > 0x200) {
        Priority = false;
        Y = InitialY;
    }
}

event Render(CamX:int, CamY:int) {
    Length = Scene.WaterLevel - InitialY;

    if (Frame < Length || Frame % 8 < 4)
        G.DrawSprite(Sprite, CurrentAnimation, 0, X - CamX, LastY - CamY, 0, IE_NOFLIP);

    G.DrawSprite(Sprite, CurrentAnimation + 2, (Frame & 0xF) / 4, X - CamX, LastY - CamY, 0, IE_NOFLIP);
}
