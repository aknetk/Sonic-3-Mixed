object 0x2C;

subclass Solid;

var Drawbridge:bool;
var Allotted:int;

event CollapsingLogBridge() : CONSTRUCTER {
    BinIndex = LevelScene.LoadSpriteBin("AIZ/Collapsing Log Bridge.bin");
}

event Create() {
    Active = true;
    Priority = false;
    DoDeform = true;

    W = 180;
    H = 16;

    VisW = 116;
    VisH = 16;

    SolidTop = true;
    SolidCustomized = true;

    Drawbridge = false;
    CurrentAnimation = Sprite.FindAnimation("Collapsing Log Bridge");
    if (SubType & 0x80) {
        VisualLayer = 1;
        Drawbridge = true;
        CurrentAnimation = 13;
        W = 192;
        H = 16;
    }

    Allotted = SubType & 0x7F;
    Frame = -1;
}

event Update() {
    if (Frame > -1 && Frame <= 60) {
        SolidTop = false;
        if (Frame == 60)
            Break();
    }
    if (Frame > 0)
        Frame -= 1;

    if (Scene.Signal[0] && Drawbridge) {
        Scene.Signal[0] = 0;
        Break();
    }
}

event Break() {
    Sound.Play(Sound.SFX_COLLAPSE);
    Active = false;

    var i:int = 0;
    var L0:int = Sprite.Animations[CurrentAnimation].Frames[0].X;
    var T0:int = Sprite.Animations[CurrentAnimation].Frames[0].Y;
    var L1:int = Sprite.Animations[CurrentAnimation].Frames[1].X;
    var T1:int = Sprite.Animations[CurrentAnimation].Frames[1].Y;
    var L2:int = Sprite.Animations[CurrentAnimation].Frames[2].X;
    var T2:int = Sprite.Animations[CurrentAnimation].Frames[2].Y;
    var X0:int = X + Sprite.Animations[CurrentAnimation].Frames[0].OffX;
    var Y0:int = Y + Sprite.Animations[CurrentAnimation].Frames[0].OffY;
    var Y2:int = Y + Sprite.Animations[CurrentAnimation].Frames[2].OffY;
    var W0:int = Sprite.Animations[CurrentAnimation].Frames[0].W;
    var H0:int = Sprite.Animations[CurrentAnimation].Frames[0].H;
    var H2:int = Sprite.Animations[CurrentAnimation].Frames[2].H;

    if (Drawbridge) {
        Scene.AddMovingSprite(Sprite, X0 - 80 + i * 32, Y0, L1, T1, W0, H0, 0, 0, false, false, 0, 0, 0x70, i * 8); i++;
        Scene.AddMovingSprite(Sprite, X0 - 80 + i * 32, Y0, L0, T0, W0, H0, 0, 0, false, false, 0, 0, 0x70, i * 8); i++;
        Scene.AddMovingSprite(Sprite, X0 - 80 + i * 32, Y0, L0, T0, W0, H0, 0, 0, false, false, 0, 0, 0x70, i * 8); i++;
        Scene.AddMovingSprite(Sprite, X0 - 80 + i * 32, Y0, L0, T0, W0, H0, 0, 0, false, false, 0, 0, 0x70, i * 8); i++;
        Scene.AddMovingSprite(Sprite, X0 - 80 + i * 32, Y0, L0, T0, W0, H0, 0, 0, false, false, 0, 0, 0x70, i * 8); i++;
        Scene.AddMovingSprite(Sprite, X0 - 80 + i * 32, Y2, L2, T2, W0, H2, 0, 0, false, false, 0, 0, 0x70, i * 8); i++;
    }
    else {
        Scene.AddMovingSprite(Sprite, X0 - 75 + i * 30, Y0, L1, T1, W0, H0, 0, 0, false, false, 0, 0, 0x70, i * 8); i++;
        Scene.AddMovingSprite(Sprite, X0 - 75 + i * 30, Y0, L0, T0, W0, H0, 0, 0, false, false, 0, 0, 0x70, i * 8); i++;
        Scene.AddMovingSprite(Sprite, X0 - 75 + i * 30, Y0, L0, T0, W0, H0, 0, 0, false, false, 0, 0, 0x70, i * 8); i++;
        Scene.AddMovingSprite(Sprite, X0 - 75 + i * 30, Y0, L0, T0, W0, H0, 0, 0, false, false, 0, 0, 0x70, i * 8); i++;
        Scene.AddMovingSprite(Sprite, X0 - 75 + i * 30, Y0, L0, T0, W0, H0, 0, 0, false, false, 0, 0, 0x70, i * 8); i++;
        Scene.AddMovingSprite(Sprite, X0 - 75 + i * 30, Y2, L2, T2, W0, H2, 0, 0, false, false, 0, 0, 0x70, i * 8); i++;
    }
}

event Render(CamX:int, CamY:int) {
    if (Drawbridge) {
        G.DrawSprite(Sprite, CurrentAnimation, 1, X - CamX - 80, Y - CamY, 0, IE_NOFLIP);
        G.DrawSprite(Sprite, CurrentAnimation, 0, X - CamX - 48, Y - CamY, 0, IE_NOFLIP);
        G.DrawSprite(Sprite, CurrentAnimation, 0, X - CamX - 16, Y - CamY, 0, IE_NOFLIP);
        G.DrawSprite(Sprite, CurrentAnimation, 0, X - CamX + 16, Y - CamY, 0, IE_NOFLIP);
        G.DrawSprite(Sprite, CurrentAnimation, 0, X - CamX + 48, Y - CamY, 0, IE_NOFLIP);
        G.DrawSprite(Sprite, CurrentAnimation, 2, X - CamX + 80, Y - CamY, 0, IE_NOFLIP);
    } else {
        G.DrawSprite(Sprite, CurrentAnimation, 1, X - CamX - 75, Y - CamY, 0, IE_NOFLIP);
        G.DrawSprite(Sprite, CurrentAnimation, 0, X - CamX - 45, Y - CamY, 0, IE_NOFLIP);
        G.DrawSprite(Sprite, CurrentAnimation, 0, X - CamX - 15, Y - CamY, 0, IE_NOFLIP);
        G.DrawSprite(Sprite, CurrentAnimation, 0, X - CamX + 15, Y - CamY, 0, IE_NOFLIP);
        G.DrawSprite(Sprite, CurrentAnimation, 0, X - CamX + 45, Y - CamY, 0, IE_NOFLIP);
        G.DrawSprite(Sprite, CurrentAnimation, 2, X - CamX + 75, Y - CamY, 0, IE_NOFLIP);
    }
	
				if (App.viewObjectCollision) {
		G.SetDrawAlpha(0x80);
		G.DrawRectangle(X - (W / 2) - CamX, Y - (H / 2) - CamY, W, H, DrawCollisionsColor);
		G.SetDrawAlpha(0xFF);
	}
}

event CustomSolidityCheck(probeX:int, probeY:int, PlayerID:int, checkJumpThrough:int) : int {
    if (!checkJumpThrough)
        return 0;

    if (!SolidTop)
        return 0;

    if (probeX >= X - W / 2 &&
        probeY >= Y - H / 2 &&
        probeX <  X + W / 2 &&
        probeY <  Y + H / 2) {
        if (!Drawbridge && Frame == -1 && Scene.Players[PlayerID].Ground && Scene.Players[PlayerID].AngleMode == 0 && Scene.Players[PlayerID].EZY < Y - H / 2) {
            Frame = 60 + Allotted;
        }
        return 1;
    }

    return 0;
}
