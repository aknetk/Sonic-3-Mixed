object 0xA0;

subclass Enemy;

var MainPalette:Uint32[16];
var HurtPalette:Uint32[16];

var TimerAction:int;
var InvulnTimer:int;
var ExplosionTimer:int;
var State:int;

event Create() {
    this.Active = true;
    this.Priority = false;

    this.W = 32;
    this.H = 32;

    this.CurrentAnimation = 16;

	//we don't want it to die :)
    HitCount = 0xFFFF;

    

    this.Y += 1;
}

event OnHit():int {
    HitCount--;
    if (HitCount == 0) {
        Scene.StopTimer = true;
        Scene.Score += 1000;
        HitCount = -1;
        return 0; //OnDeath();
    }
    InvulnTimer = 0x20;
    return 0;
}

event Update() {

}

event Render(CamX:int, CamY:int) {
        G.DrawSprite(this.Sprite, CurrentAnimation, Frame >> 8, this.X - CamX, this.Y - CamY, 0, this.FlipX ? IE_FLIPX : IE_NOFLIP);
    
					if (App.viewObjectCollision) {
		G.SetDrawAlpha(0x80);
		G.DrawRectangle(X - (W / 2) - CamX, Y - (H / 2) - CamY, W, H, DrawCollisionsColor);
		G.SetDrawAlpha(0xFF);
		}
}