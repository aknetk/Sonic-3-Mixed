event SegmentedColumnStub() : CONSTRUCTER {
    BinIndex = LevelScene.LoadSpriteBin("ICZ/Wall and Column.bin"); //TODO give seperate bin/animation
}

event Create() {
    W = 64;
    H = 32;
    Active = true;
    Priority = false;
    Solid = true;
    Scene.AddSelfToRegistry(this, "Solid");
    CurrentAnimation = Sprite.FindAnimation("Wall and Column");
    Frame = SubType == 0 ? 8 : 1;
}

event OnCollisionWithPlayer(PlayerID:int, HitFrom:int, Data:int) : int {
    if (!Solid) return 0;
    return 1;
}

event Break() {
    BinIndex = LevelScene.LoadSpriteBin("ICZ/Ice Cube.bin");
    CurrentAnimation = Sprite.FindAnimation("Ice Cube");
    Scene.AddMovingSprite(Sprite, X + 12, Y + 4, CurrentAnimation + 1, 0 + (4 & 3), false, false,  0x1C0, -0x1C0, 0xA0);
    Scene.AddMovingSprite(Sprite, X - 12, Y + 4, CurrentAnimation + 1, 0 + (3 & 3), false, false, -0x1B0, -0x1C0, 0xA0);
    Scene.AddMovingSprite(Sprite, X + 12, Y - 4, CurrentAnimation + 1, 0 + (2 & 3), false, false,  0x100, -0x1E0, 0xA0);
    Scene.AddMovingSprite(Sprite, X - 4, Y - 4, CurrentAnimation + 1, 0 + (1 & 3), false, false, -0x100, -0x200, 0xA0);
}

event Render(CamX:int, CamY:int) {
    if (!Visible) { 
        return;
    }

	if (DrawCollisions) {
		G.SetDrawAlpha(0x80);
		G.DrawRectangle(X - CamX, Y - CamY, W, H, DrawCollisionsColor);
		G.SetDrawAlpha(0xFF);
	} 
    G.DrawSprite(Sprite, CurrentAnimation, Frame, X - CamX, Y - CamY, 0, IE_NOFLIP);
}

event OnBreakVertical(PlayerID:int, HitFrom:int) : int {
    return OnBreakHorizontal(PlayerID, HitFrom);
}

event OnBreakHorizontal(PlayerID:int, HitFrom:int) : int {
    if ((HitFrom & (int)(CollideSide.SIDES)) == 0) { 
        return 0;
    }
    
    if (Scene.Players[PlayerID].XSpeed > 0x12) {	
        BreakableByRoll = CollideSide.NONE;
        Sound.Play(Sound.SFX_COLLAPSE);
        Solid = false;
        Visible = false;
        Break();
        return 1;
	}
	return 0;
}